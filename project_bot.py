import io
import telebot as tb
from telebot import types
from PIL import Image
import check
from dotenv import load_dotenv
import os
import peewee as p
import models as m
import threading


with m.db as db:
    class Group:
        def create_group (self,namegroup,idgroup) :
            addgroup=m.Group(name=namegroup,groupchatid=idgroup)
            addgroup.save()
    class User:
        def add_user(self,fname,lname,idtg):
            adduser=m.User(firstname=fname,lastname=lname,tgid=idtg)
            adduser.save()
    class GroupUser:
        def add_user_group(self,iduser,idgroup):
            add_userin_group=m.GroupUser(usersid=iduser,groupid=idgroup)
            add_userin_group.save()
    load_dotenv('data.env')
    purch_bot = tb.TeleBot(os.getenv('API'))

    buy_list = {'ready_users': 0,
                        'users': {}}

    @purch_bot.message_handler(commands=['start', 'about'])
    def greeting(message):
        markup = types.InlineKeyboardMarkup()
        # markup.add(types.InlineKeyboardButton(text='–ü–æ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', callback_data='go_shopping'))
        markup.add(types.InlineKeyboardButton(text='‚úî –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É ‚úî', callback_data='bdgroup'))
        markup.add(types.InlineKeyboardButton(text='ü§î –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞‚ùî', callback_data='info'))
        markup.add(types.InlineKeyboardButton(text='‚è±Ô∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏', callback_data='timer'))
        purch_bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)


    def read_qr(message):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å QR-–∫–æ–¥', callback_data='qr'))
        markup.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É QR-–∫–æ–¥–∞', callback_data='qrdec'))
        
        purch_bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)


    @purch_bot.callback_query_handler(func = lambda callback: True)
    def callback_message(callback):
        if callback.data == 'qr':
            qr_markup = types.InlineKeyboardMarkup()
            purch_bot.send_message(callback.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π QR-–∫–æ–¥', reply_markup=qr_markup)

            @purch_bot.message_handler(content_types=['photo'])
            def get_photo(message):
                photo_id = message.photo[-1].file_id
                # –î–æ—Å—Ç–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É
                photo_file = purch_bot.get_file(photo_id) # <class 'telebot.types.File'>
                downloaded_photo = purch_bot.download_file(photo_file.file_path) # <class 'bytes'>
                # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º
                fp=io.BytesIO(downloaded_photo)
                img = Image.open(fp)
                namepath='123.jpg'
                img.save(namepath)
                try:
                    checkinfo=check.send_data(namepath,None)
                    cont=''
                    for c in range(0,len(checkinfo)):
                        for i,k in checkinfo[c].items():
                            if i == '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ':
                                cont+='\n'
                            cont+=str(i)+' : '+str(k)+' üíé\n'
                    purch_bot.send_message(message.chat.id,text=cont)
                    checkinfo=checkinfo.clear()
                except Exception:purch_bot.send_message(message.chat.id,text='‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å QR-–∫–æ–¥, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ—Ç–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ QR-–∫–æ–¥–∞ –∏–ª–∏ –µ–≥–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É ‚ùó')
                read_qr(message)
    
    
        elif callback.data=='qrdec':
            qrt_markup = types.InlineKeyboardMarkup()
            purch_bot.send_message(callback.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É —Å–≤–æ–µ–≥–æ QR-–∫–æ–¥–∞', reply_markup=qrt_markup)

            @purch_bot.message_handler(content_types=['text'])
            def get_qrwithtxt(message):
                try:
                    checkinfo=check.send_data(None,str(message.text))
                    conttxt=''
                    for c in range(0,len(checkinfo)):
                        for i,k in checkinfo[c].items():
                            if i == '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ':
                                conttxt+='\n'
                            conttxt+=str(i)+' : '+str(k)+' üíé\n'
                    purch_bot.send_message(message.chat.id,text=conttxt)
                    checkinfo=checkinfo.clear()
                except Exception:purch_bot.send_message(message.chat.id,text='‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É QR-–∫–æ–¥–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ QR-–∫–æ–¥–∞ ‚ùó')
                read_qr(message)

        elif callback.data == 'info':
            print('info')
            purch_bot.answer_callback_query(callback.id)
        # elif callback.data=='new_group':
        #     markupgroup=types.InlineKeyboardMarkup()
        #     markupgroup.add(types.InlineKeyboardButton(text='‚úÖ', callback_data='bdgroup'))
        #     purch_bot.send_message(callback.message.chat.id, 'ü§ù–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨á', reply_markup=markupgroup)
        elif callback.data=='bdgroup':
            filtergr=m.Group.select().where(m.Group.groupchatid == callback.message.chat.id).count()
            if filtergr==0:
                addgroup=Group()
                addgroup.create_group(callback.message.chat.title,callback.message.chat.id)
                markupgroup=types.InlineKeyboardMarkup()
                markupgroup.add(types.InlineKeyboardButton(text='üíé', callback_data='add_user_group'))
                purch_bot.send_message(callback.message.chat.id, '‚úÖ –ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –Ω–∞–∂–º–∏–Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨á', reply_markup=markupgroup)
            else:
                markupaddusingr=types.InlineKeyboardMarkup()
                markupaddusingr.add(types.InlineKeyboardButton(text='üíé', callback_data='add_user_group'))
                purch_bot.send_message(callback.message.chat.id, 'üßê –í–∞—à–∞ –≥—Ä—É–ø–ø–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞! –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –Ω–∞–∂–º–∏–Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨á',reply_markup=markupaddusingr)
        elif callback.data=='add_user_group':
            filteruser=m.User.select().where(m.User.tgid==callback.from_user.id).count()
            if filteruser==0:
                if callback.from_user.last_name==None:
                    adduser=User()
                    adduser.add_user(callback.from_user.first_name,'–ù–µ —É–∫–∞–∑–∞–Ω–æ',callback.from_user.id)
                else:
                    adduser=User()
                    adduser.add_user(callback.from_user.first_name,callback.from_user.last_name,callback.from_user.id)
            userdata=m.User.select().where(m.User.tgid==callback.from_user.id).get()
            userid=userdata.id
            groupdata=m.Group.select().where(m.Group.groupchatid==callback.message.chat.id).get()
            groupid=groupdata.id
            filtergroupuser=m.GroupUser.select().where((m.GroupUser.usersid==userid) & (m.GroupUser.groupid==groupid)).count()
            if filtergroupuser==0:
                adduseringr=GroupUser()
                adduseringr.add_user_group(userid,groupid)
                purch_bot.send_message(callback.message.chat.id, 'üôå –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—É!')
            else:
                purch_bot.send_message(callback.message.chat.id, 'ü•≥ –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ')
        #–¢–∞–π–º–µ—Ä –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        elif callback.data == 'timer':
            userdata=m.User.select().where(m.User.tgid==callback.from_user.id).get()
            userid=userdata.id
            groupdata=m.Group.select().where(m.Group.groupchatid==callback.message.chat.id).get()
            groupid=groupdata.id
            filtergroupuser=m.GroupUser.select().where((m.GroupUser.usersid==userid) & (m.GroupUser.groupid==groupid)).count()
            
            if filtergroupuser==1:
                seconds = 180
                # –í—ã–≤–æ–¥ –º–∏–Ω—É—Ç
                while seconds > 0:
                    if seconds % 60 == 0:
                        purch_bot.send_message(callback.message.chat.id, f'–û—Å—Ç–∞–ª–æ—Å—å {seconds // 60} –º–∏–Ω.')
                    seconds -= 1
                    # –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ –æ–¥–Ω—É —Å–µ–∫—É–Ω–¥—É
                    threading.Event().wait(1) # –û–∂–∏–¥–∞–Ω–∏–µ 1 —Å–µ–∫—É–Ω–¥—É
                purch_bot.send_message(callback.message.chat.id, '–í—Ä–µ–º—è –≤—ã—à–ª–æ, —Å–ø–∏—Å–æ–∫ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω!')
                read_qr(callback.message)


                # def Ready():
                #     purch_bot.send_message(callback.message.chat.id, '–í—Ä–µ–º—è –≤—ã—à–ª–æ, —Å–ø–∏—Å–æ–∫ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω!')
                #     read_qr(callback.message)

                # timer = threading.Timer(10, Ready)
                # timer.start()
            else:
                purch_bot.send_message(callback.message.chat.id, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥—Ä—É–ø–ø–µ!')
            

        #–ü–æ—Ö–æ–¥ –∑–∞ –ø–æ–∫—É–ø–∫–∞–º–∏
        # elif callback.data == 'go_shopping':
        #     going_user = f'{callback.from_user.first_name}, –∏–¥—ë—Ç –≤ –º–∞–≥–∞–∑–∏–Ω!'
        #     markup = types.InlineKeyboardMarkup()
        #     markup.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—Å—Ç –ø–æ–∫—É–ø–æ–∫', callback_data='buy_list'))
        #     purch_bot.send_message(callback.message.chat.id, going_user, reply_markup=markup)
        #     buy_list['ready_users'] = 0
        #     buy_list['users'] = {}
        #–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫
        # elif callback.data == 'ready':
        #     if callback.from_user.id in buy_list['users']:
        #         buy_list['ready_users'] += 1
        #         if buy_list['ready_users'] == len(buy_list['users']):
        #             purch_bot.send_message(callback.message.chat.id, '–°–ø–∏—Å–æ–∫ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω!')
        #             buy_list['ready_users'] = 0
        #             buy_list['users'] = {}
        #     else:
        #         purch_bot.send_message(callback.message.chat.id, '–í—ã –Ω–µ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫!')
        #     print(callback.data)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
        # elif callback.data == 'buy_list':
        #     purch_bot.send_message(callback.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫. –ò –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ì–æ—Ç–æ–≤–æ".')

        #     @purch_bot.message_handler(content_types=['text'])
        #     def add_in_list(message):
        #         if message.from_user.id not in buy_list['users']:
        #             buy_list['users'][message.from_user.id] = {message.from_user.first_name: []}
        #         else:
        #             buy_list['users'][message.from_user.id][message.from_user.first_name].append(message.text)
                    
        #         list_markup = types.InlineKeyboardMarkup()
        #         list_markup.add(types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='ready'))
        #         purch_bot.send_message(callback.message.chat.id, '–ß—Ç–æ –±—ã –≤—ã –µ—â—ë —Ö–æ—Ç–µ–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å?', reply_markup=list_markup)

        #         print(buy_list)
        #         print(len(buy_list['users']))
        #         print(callback.data)

    purch_bot.infinity_polling()